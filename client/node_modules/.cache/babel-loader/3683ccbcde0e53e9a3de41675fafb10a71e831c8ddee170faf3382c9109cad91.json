{"ast":null,"code":"var _jsxFileName = \"C:\\\\todoapp02\\\\client\\\\src\\\\components\\\\TodoForm.tsx\";\nimport { TextField } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = ({\n  text,\n  setText,\n  onAdd\n}) => {\n  // テキスト入力が変更されたときのイベントハンドラ\n  const handleTextChange = e => {\n    setText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      margin: \"normal\",\n      label: \"ADD TODO\",\n      required: true,\n      fullWidth: true,\n      value: text,\n      onChange: handleTextChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: onAdd,\n      children: \"+Todo\\u3092\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["TextField","Box","Button","jsxDEV","_jsxDEV","TodoForm","text","setText","onAdd","handleTextChange","e","target","value","children","margin","label","required","fullWidth","onChange","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["C:/todoapp02/client/src/components/TodoForm.tsx"],"sourcesContent":["import { TextField } from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\ntype TodoFormProps = {\r\n  text: string;\r\n  setText: React.Dispatch<React.SetStateAction<string>>;\r\n  onAdd: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n};\r\n\r\nconst TodoForm: React.FC<TodoFormProps> = ({ text, setText, onAdd }) => {\r\n  // テキスト入力が変更されたときのイベントハンドラ\r\n  const handleTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <TextField\r\n        margin=\"normal\"\r\n        label=\"ADD TODO\"\r\n        required\r\n        fullWidth\r\n        value={text}\r\n        onChange={handleTextChange}\r\n      />\r\n      <Button variant=\"contained\" onClick={onAdd}>\r\n        +Todoを追加\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ1C,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAM,CAAC,KAAK;EACtE;EACA,MAAMC,gBAAgB,GAAIC,CAAsC,IAAK;IACnEH,OAAO,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,oBACER,OAAA,CAACH,GAAG;IAAAY,QAAA,gBACFT,OAAA,CAACJ,SAAS;MACRc,MAAM,EAAC,QAAQ;MACfC,KAAK,EAAC,UAAU;MAChBC,QAAQ;MACRC,SAAS;MACTL,KAAK,EAAEN,IAAK;MACZY,QAAQ,EAAET;IAAiB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFlB,OAAA,CAACF,MAAM;MAACqB,OAAO,EAAC,WAAW;MAACC,OAAO,EAAEhB,KAAM;MAAAK,QAAA,EAAC;IAE5C;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACG,EAAA,GArBIpB,QAAiC;AAuBvC,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}